#*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$##$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
#*$*$*$*$*$*$*$*$*$*$*$*$*$*$* TEMPLATES $*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
#*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$##$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
templates:

### DELUGE BTN #########################################################



  deluge_btn:
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/btn
      movedone: /media/sdh1/home/tubedogg/tor/2/btn
      label: btn-1
      content_filename: "{{series_name}} - {{series_id|lower}}"

  deluge_btn-prem:
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/btn-prem
      movedone: /media/sdh1/home/tubedogg/tor/2/btn-prem
      label: btn-prem-1
      content_filename: "{{series_name}} - {{series_id|lower}}"


#*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$##$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
#*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$* TASKS $*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
#*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$##$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
tasks:

########################################################################
################### TV/BTN #############################################
########################################################################

### BTN RSS ############################################################
  rss_btn_my-shows:
    # my list of active shows
    include:
      - shows.yml
      - includes/btn_rss_720p-mkv.yml
    template: deluge_btn

  rss_btn_other-shows:
    # misc shows not on my main list, but that I want to catch
    include:
      - misc-shows.yml
      - includes/btn_rss_720p-mkv.yml
    template: deluge_btn

  rss_btn_my-premieres:
    # premieres I am waiting for, based on my Trakt list premieres,
    # matching against the BTN MKV 720p feed
    include:
      - includes/trakt_premieres.yml
      - includes/btn_rss_720p-mkv.yml
    template: deluge_btn-prem
    # if I used series_premiere: yes here, it would match every S01E01
    # in the feed and wouldn't even check against my list...bug or
    # feature? instead, check for S01E01 manually
    if:
      - series_id != "S01E01": reject

  rss_btn_all-premieres:
    # all premieres that come across, except for certain categories/
    # networks, matching against the BTN MKV 720p feed
    include:
      - includes/btn_rss_720p-mkv.yml
    template: deluge_btn-prem
    # here I can use series_premiere because I do want everything, and
    # i'm filtering the output from there
    series_premiere:
      allow_teasers: no
    thetvdb_lookup: yes
    # if these fields aren't present, reject, because i can't filter for
    # them
    require_field:
      - tvdb_genres
      - tvdb_first_air_date
    if:
      # if it didn't first air in the last 60 days it's not actually new
      - tvdb_first_air_date != None and tvdb_first_air_date < now - timedelta(days=60): reject
    regexp:
      reject:
        - talk show: {from: tvdb_genres}
        - game show: {from: tvdb_genres}
        - reality: {from: tvdb_genres}
        - children: {from: tvdb_genres}
        - hallmark channel: {from: tvdb_network}
        # ^ *shudders*
        - bravo: {from: tvdb_network}
        - lifetime( movie)?: {from: tvdb_network}


### BTN TORRENT WATCHDIR ###############################################

  # easy way to upload torrents i manually download, from specific
  # folders, and still get all the magic benefits of flexget
  watchdir_btn-eps:
    template: deluge_btn
    find:
      path: ~/Torrents/btn
      mask: '*.torrent'
    all_series: yes

  watchdir_btn-seasons:
    template: deluge_btn
    find:
      path: ~/Torrents/btn
      mask: '*.torrent'
    accept_all: yes

  watchdir_btn-prem:
    template: deluge_btn-prem
    find:
      path: ~/Torrents/btn-prem
      mask: '*.torrent'
    accept_all: yes


### BTN DOWNLOADS ######################################################

  # downloads are processed through aria2
  downloads_btn:
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      label: btn-2
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: btn-1
        state: seeding
    aria2:
      uri: 'ftp://ftp_user:ftp_pass@deluge.example.com:21/tor/2/btn/{{filename}}'
      server: localhost
      port: 6800
      aria_config:
        max-connection-per-server: 4
        max-concurrent-downloads: 4
        split: 4
        file-allocation: none
        dir: "/Volumes/Timon/TVS"
      do: add-new
      exclude_samples: yes
      exclude_non_content: yes
      parse_filename: yes
      rename_content_files: yes
      content_is_episodes: yes
      rename_template: "{{series_name}} - {{series_id|lower()}}"
    # if these are not disabled, it will reject everything due to
    # already having seen it when added to deluge originally. yes this
    # is a hack-ish workaround
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes

  downloads_btn-prem:
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      label: btn-prem-2
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: btn-prem-1
        state: seeding
    aria2:
      uri: 'ftp://ftp_user:ftp_pass@deluge.example.com:21/tor/2/btn-prem/{{filename}}'
      server: localhost
      port: 6800
      aria_config:
        max-connection-per-server: 4
        max-concurrent-downloads: 4
        split: 4
        file-allocation: none
        dir: "/Volumes/Timon/PremieresS"
      do: add-new
      exclude_samples: yes
      exclude_non_content: yes
      parse_filename: yes
      rename_content_files: yes
      content_is_episodes: yes
      rename_template: "{{series_name}} - {{series_id|lower()}}"
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes


### BTN CLEANUP ########################################################

  # the theory here is to get a list of torrents in btn-2 (my "is down-
  # loading" label in deluge), match against what's in aria2, and remove
  # anything that's done from aria2, and switch the label and path in
  # deluge. in reality it switches the settings in deluge regardless of
  # status in aria2, because aria2 is only an output plugin right now.
  # TODO: make aria2 an input plugin too
  cleanup_downloads_btn:
    manual: yes
    disable_builtins: [seen_info_hash, seen]
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: btn-2
        state: seeding
    accept_all: yes
    aria2:
      server: localhost
      port: 6800
      do: remove-completed
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/3/btn
      label: btn-3

  cleanup_downloads_btn-prem:
    manual: yes
    disable_builtins: [seen_info_hash, seen]
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: btn-prem-2
        state: seeding
    accept_all: yes
    aria2:
      server: localhost
      port: 6800
      do: remove-completed
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/3/btn-prem
      label: btn-prem-3


########################################################################
################### TV/TVT #############################################
########################################################################

### TVT TORRENT WATCHDIR ###############################################

  # same as for BTN
  watchdir_tvt:
    find:
      path: ~/Torrents/tvt
      mask: '*.torrent'
    all_series: yes
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/tvt
      movedone: /media/sdh1/home/tubedogg/tor/2/tvt
      label: tvt-1
      content_filename: "{{series_name}} - {{series_id|lower}}"


### TVT DOWNLOADS ######################################################

  # same as for BTN
  downloads_tvt:
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      label: tvt-2
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: tvt-1
        state: seeding
    aria2:
      uri: 'ftp://ftp_user:ftp_pass@deluge.example.com:21/tor/2/tvt/{{filename}}'
      server: localhost
      port: 6800
      aria_config:
        max-connection-per-server: 4
        max-concurrent-downloads: 4
        split: 4
        file-allocation: none
        dir: "/Volumes/Timon/TVS"
      do: add-new
      exclude_samples: yes
      exclude_non_content: yes
      parse_filename: yes
      rename_content_files: yes
      content_is_episodes: yes
      rename_template: "{{series_name}} - {{series_id|lower()}}"
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes


### TVT CLEANUP ########################################################

  # same as for BTN
  cleanup_downloads_tvt:
    manual: yes
    disable_builtins: [seen_info_hash, seen]
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: tvt-2
        state: seeding
    accept_all: yes
    aria2:
      server: localhost
      port: 6800
      do: remove-completed
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/3/tvt
      label: tvt-3


########################################################################
################### TV/TVV #############################################
########################################################################

### TVV TORRENT WATCHDIR ###############################################

  # same as for BTN
  watchdir_tvv:
    find:
      path: ~/Torrents/tvv
      mask: '*.torrent'
    all_series: yes
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/tvv
      movedone: /media/sdh1/home/tubedogg/tor/2/tvv
      label: tvv-1
      content_filename: "{{series_name}} - {{series_id|lower}}"


### TVV DOWNLOADS ######################################################

  # same as for BTN
  downloads_tvv:
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      label: tvv-2
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: tvv-1
        state: seeding
    aria2:
      uri: 'ftp://ftp_user:ftp_pass@deluge.example.com:21/tor/2/tvv/{{filename}}'
      server: localhost
      port: 6800
      aria_config:
        max-connection-per-server: 4
        max-concurrent-downloads: 4
        split: 4
        file-allocation: none
        dir: "/Volumes/Timon/TVS"
      do: add-new
      exclude_samples: yes
      exclude_non_content: yes
      parse_filename: yes
      rename_content_files: yes
      content_is_episodes: yes
      rename_template: "{{series_name}} - {{series_id|lower()}}"
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes


### TVV CLEANUP ########################################################

  # same as for BTN
  cleanup_downloads_tvv:
    manual: yes
    disable_builtins: [seen_info_hash, seen]
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: tvv-2
        state: seeding
    accept_all: yes
    aria2:
      do: remove-completed
      server: localhost
      port: 6800
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/3/tvv
      label: tvv-3


########################################################################
################## MOVIES/TC ###########################################
########################################################################

### TC RSS #############################################################

  # filter the TC RSS feed against movies in my movie-queue
  rss_tc_movie-queue:
    include: [ includes/tc_rss.yml ]
    movie_queue: yes
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/tc
      movedone: /media/sdh1/home/tubedogg/tor/2/tc
      label: tc-1
      content_filename: "{{movie_name}} ({{movie_year}})"


### TC TORRENT WATCHDIR ################################################

  # similar to BTN, different content_filename though
  watchdir_tc:
    find:
      path: ~/Torrents/tc
      mask: '*.torrent'
    set:
      title: '{{movie_name}} ({{movie_year}})'
    imdb_lookup: yes
    accept_all: yes
    movie_queue: yes
    move:
      to: "~/Torrents/_done"
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/tc
      movedone: /media/sdh1/home/tubedogg/tor/2/tc
      label: tc-1
      content_filename: "{{movie_name}} ({{movie_year}})"


### TC DOWNLOADS #######################################################

  # similar to BTN, different rename_template and end directory though
  downloads_tc:
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: tc-1
        state: seeding
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      label: tc-2
    aria2:
      server: localhost
      port: 6800
      do: add-new
      uri: ftp://ftp_user:ftp_pass@deluge.example.com:21/tor/2/tc/{{filename}}
      exclude_samples: yes
      exclude_non_content: yes
      parse_filename: yes
      rename_content_files: yes
      rename_template: '{{movie_name}} ({{movie_year}})'
      aria_config:
        dir: '/Volumes/Smithee/MoviesS/'
        max-connection-per-server: 4
        max-concurrent-downloads: 4
        split: 4
        file-allocation: none


### TC CLEANUP #########################################################

  # same as for BTN
  cleanup_downloads_tc:
    manual: yes
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes
    aria2:
      server: localhost
      port: 6800
      do: remove-completed
      exclude_samples: yes
      exclude_non_content: yes
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: tc-2
        state: seeding
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/3/tc
      label: tc-3


########################################################################
################# MOVIES/PTP ###########################################
########################################################################

### PTP RSS ############################################################

  # same as for TC
  rss_ptp_movie-queue:
    include: [ ptp_rss.yml ]
    movie_queue: yes
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/ptp
      movedone: /media/sdh1/home/tubedogg/tor/2/ptp
      label: ptp-1
      content_filename: "{{movie_name}} ({{movie_year}})"


### PTP TORRENT WATCHDIR ###############################################

  # same as for TC
  watchdir_ptp:
    find:
      path: ~/Torrents/ptp
      mask: '*.torrent'
    set:
      title: '{{movie_name}} ({{movie_year}})'
    imdb_lookup: yes
    accept_all: yes
    movie_queue: yes
    move:
      to: "~/Torrents/_done"
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/1/ptp
      movedone: /media/sdh1/home/tubedogg/tor/2/ptp
      label: ptp-1
      content_filename: "{{movie_name}} ({{movie_year}})"


### PTP DOWNLOADS ######################################################

  # same as for TC
  downloads_ptp:
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: ptp-1
        state: seeding
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      label: ptp-2
    aria2:
      server: localhost
      port: 6800
      do: add-new
      uri: ftp://ftp_user:ftp_pass@deluge.example.com:21/tor/2/ptp/{{filename}}
      exclude_samples: yes
      exclude_non_content: yes
      parse_filename: yes
      rename_content_files: yes
      rename_template: '{{movie_name}} ({{movie_year}})'
      aria_config:
        dir: '/Volumes/Smithee/MoviesS/'
        max-connection-per-server: 4
        max-concurrent-downloads: 4
        split: 4
        file-allocation: none


### PTP CLEANUP ########################################################

  # same as for TC
  cleanup_downloads_ptp:
    manual: yes
    disable_builtins: [seen_info_hash, seen]
    accept_all: yes
    aria2:
      server: localhost
      port: 6800
      do: remove-completed
      exclude_samples: yes
      exclude_non_content: yes
    from_deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      filter:
        label: ptp-2
        state: seeding
    deluge:
      host: deluge.example.com
      port: 12345
      user: deluge_user
      pass: deluge_pass
      path: /media/sdh1/home/tubedogg/tor/3/ptp
      label: ptp-3


########################################################################
################# MOVIE QUEUE ##########################################
########################################################################

  # read my trakt "Movies to Get" list and add to movie-queue in flexget
  movie_queue_from_trakt:
    include: [ includes/trakt_movies-to-get.yml ]
    accept_all: yes
    queue_movies:
      quality: 720p+ bluray


#*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$##$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
#*$*$*$*$*$*$*$*$*$*$*$*$*$*$* SCHEDULES $*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
#*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$##$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*$*#
schedules:

  # run main TV and movie RSS feeds once per day after all new shows
  # should be up
  - tasks: ['rss_btn*', 'rss_tc*', 'rss_ptp*']
    interval:
      days: 1
      at_time: 1:00 am
  # run BTN downloads every 6 hours
  - tasks: ['down*btn*']
    interval:
      hours: 6
  # run movie downloads once a day
  - tasks: ['down*tc', 'down*ptp']
    interval:
      days: 1
      at_time: 5:00 am
  # run TVV and TVT downloads once every 3 days since the trackers
  # are not used as much (by me)
  - tasks: ['down*tv*']
    interval:
      days: 3
  # update my movie-queue every 2 days from trakt
  - tasks: ['movie_queue_from_trakt']
    interval:
      days: 2
